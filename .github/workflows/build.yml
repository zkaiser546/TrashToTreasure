name: Android APK Builder

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 90

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip python3-pip python3-venv \
            openjdk-17-jdk autoconf libtool pkg-config \
            zlib1g-dev libncurses5-dev cython3

      - name: Install Buildozer
        run: |
          pip install --upgrade pip wheel
          pip install buildozer cython==0.29.33

      - name: Manual Android SDK Installation
        run: |
          # Create SDK directory
          mkdir -p ~/android-sdk
          cd ~/android-sdk
          
          # Download and extract command line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-*.zip
          rm commandlinetools-linux-*.zip
          mv cmdline-tools latest
          mkdir -p cmdline-tools
          mv latest cmdline-tools/
          
          # Accept all licenses non-interactively
          yes | ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          
          # Install specific components (using build-tools 34.0.0 instead of 36)
          ~/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;34.0.0"
          ~/android-sdk/cmdline-tools/latest/bin/sdkmanager "platforms;android-34"
          
          # Install NDK version that works with Buildozer
          ~/android-sdk/cmdline-tools/latest/bin/sdkmanager "ndk;25.1.8937393"
          
          # MANUAL AIDL FIX - Verify and make executable
          chmod +x ~/android-sdk/build-tools/34.0.0/aidl
          if [ -f ~/android-sdk/build-tools/34.0.0/aidl ]; then
            echo "AIDL found and made executable"
            ~/android-sdk/build-tools/34.0.0/aidl --version || echo "AIDL version check failed but continuing"
          else
            echo "ERROR: AIDL not found at expected path!"
            echo "Contents of build-tools directory:"
            ls -la ~/android-sdk/build-tools/34.0.0/
            exit 1
          fi

      - name: Configure Environment
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/android-sdk/platform-tools:$HOME/android-sdk/build-tools/34.0.0:$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_ENV

      - name: Create buildozer.spec with AIDL config
        run: |
          cat > buildozer.spec << EOL
          [app]
          title = MyApp
          package.name = myapp
          package.domain = org.test
          source.dir = .
          source.include_exts = py,png,jpg,kv,atlas
          version = 0.1
          requirements = python3,kivy
          orientation = portrait
          
          [buildozer]
          log_level = 2
          warn_on_root = 1
          android.sdk_path = $HOME/android-sdk
          android.ndk_path = $HOME/android-sdk/ndk/25.1.8937393
          android.accept_sdk_license = True
          android.arch = armeabi-v7a
          android.build_tools_version = 34.0.0
          android.api = 34
          android.minapi = 21
          android.aidl = $HOME/android-sdk/build-tools/34.0.0/aidl  # EXPLICIT AIDL PATH
          android.skip_sdk_download = True
          android.skip_ndk_download = True
          EOL

      - name: Build APK with AIDL verification
        run: |
          # Clean previous builds
          rm -rf .buildozer bin
          mkdir -p bin
          
          # Verify AIDL is accessible
          if [ ! -f $HOME/android-sdk/build-tools/34.0.0/aidl ]; then
            echo "CRITICAL ERROR: AIDL still missing after installation!"
            exit 1
          fi
          
          # Build with debug logging
          buildozer -v android debug > build.log 2>&1 || (cat build.log && exit 1)
          
          # Verify APK exists
          if [ ! -f bin/*.apk ]; then
            echo "APK not found! Full build log:"
            cat build.log
            exit 1
          fi

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-app
          path: bin/*.apk
